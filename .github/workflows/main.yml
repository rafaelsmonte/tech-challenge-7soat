name: Docker Image CI

on:
  push:
    branches: [ "main" ]
jobs:
  build-and-push:
  #needs: sonar
    name: Build Image
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v2
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ECR_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_ECR_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_ECR_REGION }}
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: tech-challenge-7soat
        IMAGE_TAG: latest
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
  # sonar:
  #   name: Sonar
  #   continue-on-error: true #remover
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0 
  #     - uses: sonarsource/sonarqube-scan-action@master
  #       env:
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #         SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  # build-and-push:
  #   needs: sonar
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: Login into Docker
  #     env: 
  #       DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
  #       DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
  #     run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
  #   - name: Build the Docker image
  #     run: docker build -t ${{env.REPO_NAME}}:latest .
  #   - name: Push to DockerHub
  #     run: docker push ${{env.REPO_NAME}}:latest


  # deploy:
  #   runs-on: self-hosted
  #   needs: build-and-push  
  #   steps:
  #     - name: Login into Docker
  #       env: 
  #         DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
  #         DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
  #       run: sudo docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
  #     - name: Removing Old Docker Container
  #       run: sudo docker rm -f tech-challenge-7soat-server || true 
  #     - name: Removing Old Docker Image
  #       run: sudo docker rmi ${{env.REPO_NAME}}:latest || true
  #     - name: Pulling Docker Image
  #       run: sudo docker pull ${{env.REPO_NAME}}:latest
  #     - name: Starting Docker Container
  #       run: |
  #         sudo docker run -d -p 3000:3000 --name tech-challenge-7soat-server \
  #           -e DATABASE_URL=${{ secrets.DATABASE_URL }} \
  #           ${{ env.REPO_NAME }}:latest
